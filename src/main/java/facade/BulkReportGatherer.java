package facade;

import model.FileReport;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import service.CouchDbService;
import service.VirusTotalService;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import java.util.List;
import java.util.stream.Collectors;

public class BulkReportGatherer {

    private static final Logger logger = LoggerFactory.getLogger(BulkReportGatherer.class);
    private static final String MALWARE_DIR_PATH = "hashes";
    private static final String MALWARE_DATABASE_NAME = "malware";

    public static void main(String[] args) {
        List<String> fileHashes;

        try {
            fileHashes = Files.list(Paths.get(MALWARE_DIR_PATH)).map(p -> p.getFileName().toString()).collect(Collectors.toList());
        } catch (IOException e) {
            logger.error("Couldn't retrieve files in directory: " + MALWARE_DIR_PATH, e);
            throw new RuntimeException(e);
        }

        VirusTotalService virusTotalService = new VirusTotalService();
        CouchDbService couchDbService = new CouchDbService(MALWARE_DATABASE_NAME);

        fileHashes.forEach(fileHash -> {
            if (couchDbService.containsFileReport(fileHash)) {
                logger.info("Database already contains document for file: " + fileHash);
            }
            else {
                FileReport fileReport = virusTotalService.getFileReport(fileHash);
                logger.info("Retrieved: " + fileReport);
                couchDbService.addFileReport(fileReport);
            }
        });

    }
}
