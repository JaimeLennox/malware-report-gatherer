package service;

import model.FileReport;
import org.ektorp.CouchDbConnector;
import org.ektorp.CouchDbInstance;
import org.ektorp.ViewQuery;
import org.ektorp.http.HttpClient;
import org.ektorp.http.StdHttpClient;
import org.ektorp.impl.StdCouchDbConnector;
import org.ektorp.impl.StdCouchDbInstance;
import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import transformer.CouchDbReportTransformer;

import java.net.MalformedURLException;
import java.util.List;
import java.util.stream.Collectors;

public class CouchDbService {

    private static final Logger logger = LoggerFactory.getLogger(CouchDbService.class);
    private static final String COUCH_DB_URL = "http://localhost:5984";

    private CouchDbReportTransformer transformer = new CouchDbReportTransformer();
    private CouchDbConnector database;

    public CouchDbService(String databaseName) {
        try {
            HttpClient httpClient = new StdHttpClient.Builder().url(COUCH_DB_URL).build();
            CouchDbInstance dbInstance = new StdCouchDbInstance(httpClient);
            database = new StdCouchDbConnector(databaseName, dbInstance);
            database.createDatabaseIfNotExists();
        } catch (MalformedURLException e) {
            logger.error("Couch DB URL appears to be malformed: " + COUCH_DB_URL, e);
        }
    }


    public void addFileReport(FileReport fileReport) {
        json.couchdb.FileReport jsonFileReport = transformer.transformFileReport(fileReport);
        database.create(jsonFileReport.getMd5().toLowerCase(), jsonFileReport);
    }

    public List<FileReport> getAllFileReports() {
         return database.queryView(new ViewQuery()
                .designDocId("_design/views")
                .viewName("all"), json.couchdb.FileReport.class)
                 .stream()
                 .map(transformer::transformFileReport)
                 .collect(Collectors.toList());
    }

    public FileReport getFileReport(String hash) {
        return transformer.transformFileReport(database.get(json.couchdb.FileReport.class, hash));
    }

    public boolean containsFileReport(String hash) {
        return database.contains(hash.toLowerCase());
    }
}
