package transformer;

import model.FileReport;
import model.Scan;

import java.util.Map;
import java.util.stream.Collectors;

public class ReportTransformer {

    public FileReport transformFileReport(json.FileReport jsonFileReport) {
        return new FileReport(
                transformScans(jsonFileReport.getScans()),
                jsonFileReport.getScan_id(),
                jsonFileReport.getSha1(),
                jsonFileReport.getResource(),
                jsonFileReport.getResponse_code(),
                jsonFileReport.getScan_date(),
                jsonFileReport.getPermalink(),
                jsonFileReport.getVerbose_msg(),
                jsonFileReport.getTotal(),
                jsonFileReport.getPositives(),
                jsonFileReport.getSha256(),
                jsonFileReport.getMd5()
        );
    }

    private Scan transformScan(json.Scan jsonScan) {
        return new Scan(
                jsonScan.isDetected(),
                jsonScan.getVersion(),
                jsonScan.getResult(),
                jsonScan.getUpdate()
        );
    }

        private Map<String, Scan> transformScans(Map<String, json.Scan> jsonScans) {
            if (jsonScans == null) return null;
            return jsonScans.entrySet()
                    .stream()
                    .collect(Collectors.toMap(
                            Map.Entry::getKey,
                            e -> transformScan(e.getValue())
                    ));
        }

}
