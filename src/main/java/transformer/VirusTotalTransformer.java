package transformer;

import model.FileReport;
import model.Scan;
import model.ScanRequest;

import java.util.Map;
import java.util.stream.Collectors;

public class VirusTotalTransformer {

    public FileReport transformFileReport(json.virustotal.FileReport jsonFileReport) {
        return new FileReport(
                transformScans(jsonFileReport.getScans()),
                jsonFileReport.getScan_id(),
                jsonFileReport.getSha1(),
                jsonFileReport.getResource(),
                jsonFileReport.getResponse_code(),
                jsonFileReport.getScan_date(),
                jsonFileReport.getPermalink(),
                jsonFileReport.getVerbose_msg(),
                jsonFileReport.getTotal(),
                jsonFileReport.getPositives(),
                jsonFileReport.getSha256(),
                jsonFileReport.getMd5()
        );
    }

    private Scan transformScan(json.virustotal.Scan jsonScan) {
        return new Scan(
                jsonScan.isDetected(),
                jsonScan.getVersion(),
                jsonScan.getResult(),
                jsonScan.getUpdate()
        );
    }

    private Map<String, Scan> transformScans(Map<String, json.virustotal.Scan> jsonScans) {
        if (jsonScans == null) return null;
        return jsonScans.entrySet()
                .stream()
                .collect(Collectors.toMap(
                        Map.Entry::getKey,
                        e -> transformScan(e.getValue())
                ));
    }

    public ScanRequest transformScanRequest(json.virustotal.ScanRequest jsonScanRequest) {
        return new ScanRequest(
                jsonScanRequest.getResponse_code(),
                jsonScanRequest.getVerbose_msg(),
                jsonScanRequest.getResource(),
                jsonScanRequest.getScan_id(),
                jsonScanRequest.getPermalink(),
                jsonScanRequest.getSha256(),
                jsonScanRequest.getSha1(),
                jsonScanRequest.getMd5()
        );
    }

}
